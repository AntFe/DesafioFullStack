package com.plataforma.gtv.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EnderecoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnderecoAllPropertiesEquals(Endereco expected, Endereco actual) {
        assertEnderecoAutoGeneratedPropertiesEquals(expected, actual);
        assertEnderecoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnderecoAllUpdatablePropertiesEquals(Endereco expected, Endereco actual) {
        assertEnderecoUpdatableFieldsEquals(expected, actual);
        assertEnderecoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnderecoAutoGeneratedPropertiesEquals(Endereco expected, Endereco actual) {
        assertThat(expected)
            .as("Verify Endereco auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnderecoUpdatableFieldsEquals(Endereco expected, Endereco actual) {
        assertThat(expected)
            .as("Verify Endereco relevant properties")
            .satisfies(e -> assertThat(e.getRua()).as("check rua").isEqualTo(actual.getRua()))
            .satisfies(e -> assertThat(e.getCep()).as("check cep").isEqualTo(actual.getCep()))
            .satisfies(e -> assertThat(e.getCidade()).as("check cidade").isEqualTo(actual.getCidade()))
            .satisfies(e -> assertThat(e.getEstado()).as("check estado").isEqualTo(actual.getEstado()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnderecoUpdatableRelationshipsEquals(Endereco expected, Endereco actual) {
        assertThat(expected)
            .as("Verify Endereco relationships")
            .satisfies(e -> assertThat(e.getPais()).as("check pais").isEqualTo(actual.getPais()));
    }
}
