package com.plataforma.gtv.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MateriaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMateriaAllPropertiesEquals(Materia expected, Materia actual) {
        assertMateriaAutoGeneratedPropertiesEquals(expected, actual);
        assertMateriaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMateriaAllUpdatablePropertiesEquals(Materia expected, Materia actual) {
        assertMateriaUpdatableFieldsEquals(expected, actual);
        assertMateriaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMateriaAutoGeneratedPropertiesEquals(Materia expected, Materia actual) {
        assertThat(expected)
            .as("Verify Materia auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMateriaUpdatableFieldsEquals(Materia expected, Materia actual) {
        assertThat(expected)
            .as("Verify Materia relevant properties")
            .satisfies(e -> assertThat(e.getNomeDaMateria()).as("check nomeDaMateria").isEqualTo(actual.getNomeDaMateria()))
            .satisfies(e -> assertThat(e.getEmenta()).as("check ementa").isEqualTo(actual.getEmenta()))
            .satisfies(e ->
                assertThat(e.getReferenciasBibliograficas())
                    .as("check referenciasBibliograficas")
                    .isEqualTo(actual.getReferenciasBibliograficas())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMateriaUpdatableRelationshipsEquals(Materia expected, Materia actual) {
        assertThat(expected)
            .as("Verify Materia relationships")
            .satisfies(e -> assertThat(e.getAulas()).as("check aulas").isEqualTo(actual.getAulas()))
            .satisfies(e -> assertThat(e.getProfessor()).as("check professor").isEqualTo(actual.getProfessor()))
            .satisfies(e -> assertThat(e.getCursos()).as("check cursos").isEqualTo(actual.getCursos()));
    }
}
